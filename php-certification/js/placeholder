1 Question
D)  0,1
Look out for PHP function names; they are not case sensitive, so both l() and L() will 
call the same method.  The function doesn't have any declared parameters so the 
inside version of the function gets ignored.

2 Question
X)MM
A trap!  The function construct() isn't a constructor, that would need to be 
__construct() instead, so the function M::m() gets called twice.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

3 Question
D) $library->addChild("title", "Best book ever")
None of the other options are valid or would work

4 Question
E) 32
Look out for operator precedence here: 
http://www.php.net/manual/en/language.operators.precedence.php – the addition 
happens first, and then you do 4 << 3 = 32

5 Question
A) An anonymous function
D) An array containing an instantiated object as the first element, and the method 
name as the second element
E) A string containing the function name
This question is about callbacks – only these three items in the list are valid ways to 
specify a callback http://php.net/manual/en/language.types.callable.php
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

6 Question
E) DOMDocument::loadHTML(file_get_contents('http://example.com/page.php'));
You can parse well-formed HTML using this method: 
http://php.net/manual/en/domdocument.loadhtml.php

7 Question
A) As many as you want
From php.net, the function prototype is:
array array_merge ( array $array1 [, array $... ] )

8 Question
B) An array containing both associative and enumerated keys
The other answers are all things you could obtain using different fetch modes in PHP, 
but the default is PDO_FETCH_BOTH 
(http://php.net/manual/en/pdostatement.fetch.php).  You can pass the fetch mode, but 
it isn't required.

9 Question
X)1
Tricky question, because preg_match() returns an integer – 1 if there were matches 
and 0 otherwise.  To capture the matches, you pass a third parameter for them to be
placed into (http://uk1.php.net/preg_match).  The pattern requires four lower case 
letters followed by a space, but doesn't anchor on to anthing so "ttle " does match.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

10 Question
E) prepare(), execute()
We usually use this when we don't have any parameters to pass in, for example 
fetching the contents of a lookup table.

11 Question
C) 401
The 401 status code means "Not Authorised", so the user will be asked to identify 
themselves.

12 Question
B) An array containing " moose " and " about "
There are a few things to spot here – first of all, don't be alarmed by all the 
punctuation in the regex, we'll get to that.  First the delimiters are # characters (you 
may know this as a pound or a hash, depending where your English is from).  These 
are valid delimiters, the only requirement is that whatever you pick to put at the start 
must be matched at the end.
The delimiters have spaces inside them, so there must be spaces at the start and end of
any matches.  Then we must have any number of word characters – the ? after the * 
means that the match isn't greedy (this happens again towards the end of the pattern) 
– followed by any two vowels, then any more word characters.
The first match is " moose " but this uses up the space before "loose", so that can't 
match, but " about " does, but "house" which looks like it should match is missing the 
trailing space.
Still with me?  preg_match_all returns results in a nested array – the first element 
contains an array of all matches.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

13 Question
X)dreaming8
We turn on output buffering, put "dreaming" into it, then grab the contents of the 
output buffer – but we haven't destroyed it.  So when we echo strlen("dreaming"), an 8 
goes into the output buffer as well, and then we flush it.

14 Question
A) Forbidden
Status code 403 means "Forbidden" – the user has provided credentials but still is not 
allowed to have acecss to this resource.

15 Question
B) 7
The explode function splits a string into an array, but the split is ", " (note the space 
after the comma).  $a therefore has ", " in it four times, making five pieces ("b,c" and "e
f" are two of the pieces.  Then we add two more elements on the end (array_merge 
doesn't mind duplicate entries) , making 7 in total.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

16 Question
C) 224
Hopefully you spotted that 0x8 is hexadecimal 8 ... which is the same as decimal 8.  
0x80 is 8x16 (we use base 16 rather than base 10) which is 128.  So 8+8+80+128 = 224

17 Question
A) array_merge
The others are all valid array functions but don't do what we need

18 Question
D) 115
There are octal numbers in here, look for the leading zero on 05 and 011.  octal 5 is 
the same as decimal 5, our string "4" will convert to a number when we try to add it to
any other number, and 011 in octabl is (8 + 1) = 9.  Hopefuly you knew that ord('a') 
was 97 and got 115 (ord('A') is 65, in case you're interested)
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

19 Question
E) 47
The function is never called.

20 Question
D) allow_url_include
G) open_basedir
None of the others are valid configuration directives for PHP 
http://www.php.net/manual/en/ini.list.php
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

21 Question
B) No
Those <php> style tags aren't valid for PHP.

22 Question
A) 105
Strlen($a) is 1, then empty($a) is true, so we hit the first leg of the ternary and echo 
$a, which is zero.  The third digit comes from the final line, $a is evaluated as false so 
we echo 5.

23 Question
D) This tree is: tree (and a notice)
We define a constant but they are case-sensitive in PHP, so tree is an undefined 
constant.  This is assumed to be a string in PHP (for historical reasons) but causes a 
notice to be emitted.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

24 Question
A) R7yu
D) AEN
F) ablwesc_99
Valid constant names in PHP can be uppercase or lowercase, and contain numbers or 
underscores, but can't start with a number.

25 Question
C) 2
Did you spot the octal 5? It's irrelevant, because five is the same in base eight or base 
ten.  The operator precedence means we do 17 + 5 = 22 first, then we do 42 & 22 ... & is
a binary operation, so we need those numbers in binary first.
22 in binary: 10110
42 in binary: 101010
The only column where both numbers have a 1, is in the 2 place.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

26 Question
C) 3-4-5-6-7-8-9
The range(3,9) gives us an array containing all integers from 3 to 9.  When we foreach
over them, we can't change the values in the array, so the contents of $a remain 
unchanged (you need to use the array and the key to update a value during foreach)

27 Question
A) 2110elephpant
The other answers are only partial.  We start with 2 and 1 from the strlen and count 
of $a.  Then we hit the do/while loop.  This executes, but $a is NOT <=1 so the loop 
ends immediately.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

28 Question
X)0
First we call c() with three zero arguments, then we return those in a strange order 
(but they are all still zero).  These get assigned into variables $a, $b and $c by the list()
function and $b is zero.

29 Question
E) -!&
This is a sharp question! We have $a as a string (containing symbols to make things 
more fun) and $b as a pointer to $a.  We call b($b) which outputs "-!" and then we 
pass the result of that into a() ... but b() doesn't return anything so null gets passed 
into a() and only the & is echoed.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

30 Question
B) $_COOKIE
D) $_REQUEST
G) $_SERVER
Familiarity with PHP will help you on this one.  More info on superglobals here: 
http://www.php.net/manual/en/language.variables.predefined.php

31 Question
A) Only one instance of the class can exist
C) It is designed to store values of various types
Applications will use a registry (or one of each of a number of related registry classes)
to store values to be used multiple times in an application

32 Question
B) False
It's safe to call static methods dynamically, and you can do so – but the opposite is not
true so you can only call non-static methods non-statically.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

33 Question
C) 1
Look out for sort(), it (and its sister functions) return true! http://www.php.net/sort

34 Question
B) interface
The ArrayAccess interface is part of the SPL http://www.php.net/arrayaccess

35 Question
D) The class property $property in this class
The scope resolution operator (the two colons ::) indicates this is a class property, and 
self means it's the property of the current class.

36 Question
A) \
We use the backslash as the namespace operator in PHP 
http://www.php.net/namespaces
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

37 Question
D) goodthingsmanygoodthings
The $x outside the function has no link with $x inside the function.  $x inside the 
function is a static variable so it retains its value between function calls.
The first time we call print_conditional(), $x is static but undefined.  The $x++ post 
increment operator returns the old value, then increments the variable, so on the first 
pass, the if() returns false and then $x is 1.  Look very closely at that if! There are no {
} brackets so only the "many" line is conditional, the "good" and "things" lines will run
regardless (this is why indentation should follow program flow).  On the second call, 
$x is 1 so the if() evaluates to true and we get the "many" line as well.

38 Question
D) Apply HTML formatting to PHP errors
The html_errors setting enables hyperlinks and formatting in any error output; other 
libraries (for example Xdebug) may also observe this setting.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

39 Question
E) 1
The function is never called ...
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

40 Question
D) nothing (no output);
This is the sort() function returning true, which makes no sense with array notation 
so PHP doesn't return us anything at all.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

41 Question
C) <i>Post:</i><i>Post:</i>1
We have a class Content and another class Article which extends Content.  When we 
instantiate a new Article() the function article() becomes our constructor because the 
method name meets the class name (this is from PHP 4 days but is still true) so we 
echo "<i>Post:</i>".  Then we call publish() on our object, which calls Article::article() 
again (NOT Content::article()), and returns true.  We echoed the output of our call and
the boolean becomes a 1 when we echo it.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

42 Question
B) A new CurrencyCheque object is created
Look closely at that parent object – it already defines the method we need to satisfy 
the interface.  Therefore we can implement it in the child class without needing to 
redeclare the method – everything will work fine.

43 Question
D) "hello"
The key here is knowing that strcmp is case-sensitive but that it returns zero if things 
match http://www.php.net/strcmp.  For anything that isn't zero, the "if" will evaluate 
to true.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

44 Question
C) using unserialize()
This data is PHP's serialized format so you wamt to unserialize it – it does look a bit 
like JSON, but the clue is that the example here includes information about the data 
type, which JSON does not.

45 Question
A) Anonymous functions can accept variables passed into them at call time
C) Closures are a kind of anonymous function
F) Closures can have variable values "baked" in at declare time
Anonymous functions were new in PHP 5.3, however hopefully either experience or 
study means you were able to pick your way through this question.  More information
on anonymous functions: http://www.php.net/manual/en/functions.anonymous.php

46 Question
X)Q
Take the time to work this one out – it looks tiny but it still needs some attention.  
First we take ord('a') = 97 and ord('A') = 65, add them together (162) and then divide 
by 2 to make 81.  Now count forwards from 65 (B is 66, C is 67, and so on) until you 
reach 81.  The chr() function is the opposite of ord() and makes numbers back into 
letters. 

47 Question
C) fopen() and fgetcsv()
or
E) fopen(), fgets() and explode()
Either of these solutions would work pretty well – for a very large file, loading it into 
memory  with file_get_contents or something similar would make PHP run out of 
memory (or at least use up a lot of it!) so it's better to use a file-pointer-based 
approach and do it a line at a time.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

48 Question
A) filter_* functions
E) ctype_* functions
G) preg_* functions
The key word in the question is "validate" – some of the options to choose from are 
great ways to sanitize data, but not to validate it.  The three answers are all great 
ways to work with incoming data which you should be familiar with:
http://www.php.net/manual/en/book.filter.php
http://www.php.net/manual/en/book.ctype.php
http://www.php.net/manual/en/ref.pcre.php

49 Question
B) safe_mode
D) register_globals
H) register_long_arrays
Some of these other options were removed in PHP 5.4 but since this is PHP 5.3 
certification, imagine that 5.4 never happened!

50 Question
A) 31
There are three steps here.  First, take the hexadecimal numbers and convert them to 
decimal, which gives you (242 + 9) = 251.  Next, write 251 in binary (it's 255 less 4 if 
you like shortcuts) which is 11111011.
Now shift that number to the right three steps, ignoring the digits which get shifted 
away to the right of the 1 column.  This should give you 11111 – which is 31 when you 
turn it back into decimal.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

51 Question
E) stream_context_create(array("http" => array("method" => "POST")));
It is possible to make all kinds of requests and set any headers you like by setting the 
context on a stream.  Here, we're setting the method option inside the http element of 
the context.

52 Question
X)ksort
There are lots of ways of sorting arrays, by key or by value, keeping keys intact or not 
– this time you need ksort.  http://www.php.net/ksort

53 Question
D) Returns the character for a given ascii code
The chr() is the opposite of the ord() function.  http://www.php.net/chr
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

54 Question
B) $d instanceof A 
C) $d instanceof C 
E) $e instanceof A 
F) $c instanceof C 
This question is really about polymorphism.  Objects will claim to be instances of the 
classes they are actually instances of, but will also identify themselves as any of their
ancestors or as any interface that their class, or any ancestor class, implements.

55 Question
C) files
D) memcache
G) sqlite
PHP defaults to files, and many other options are available but providing you have 
memcache or sqlite, either of these can be use for session storage
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

56 Question
B) Easily storing and retrieving objects in the database
Made famous by ruby on rails, the active record pattern is common in model layers to 
handle the translation between the objects we use in applications and the way we 
store them.

57 Question
C) Array ( [theme] => green ) Array ( [theme] => green )
Here we see the contents of the $_COOKIE array, but setting another cookie will not 
make any difference until the next request.  The contents of $_COOKIE are output 
again, then we unset the array.  We haven't destroyed any of the cookies being 
exchanged, but we have removed them from that variable in our script.  So we don't
see the output (but there would be a notice if they were enabled).
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

58 Question
D) 11
In this script, we have an anonymous function.  We declare it and assign it to $i.  Then
we call it, and pass in $j which is set to 6.  The $i inside the scope of the function has 
no link with anything outside, so it's fine (although confusing!) to use the variable 
name there.  6 +4 is 10, then we increment $i and make 11, then return it.

59 Question
E) nothing
Nothing is returned by swings() so there's no output echoed.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

60 Question
B) noneonenoneonenone
This is really similar to an earlier question but don't be fooled; there are some 
differences.  $x is 1 and we call print_conditional, passing in $x.  The post increment 
means the if is evaluated to true and all three echo lines will be executed.  The 
function returns $x but it isn't assigned so $x is still 1.
In the last two lines we increment $x and pass it into the function again, but this time 
the if does not evaluate to true.  The absence of curly braces however means that we 
do still get the "one" and second "none" line.

61 Question
D) __clone()
This question is about magic methods; these are a key element of OOP theory in PHP.  
http://www.php.net/manual/en/language.oop5.magic.php
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

62 Question
A) 0a1a2a3a
We start off with the range statement which produces an array containing the values: 
5,6,7,8, used only for count() purposes, and another array with letters in.  The for loop
has a foreach inside it, but with a break statement, so the for loop operates as normal 
but the foreach loop only gets run once before we break out of it, on each turn around 
the for loop.

63 Question
B) This,contains,many,sentence,words
Applying ucfirst to $s makes no difference, but exploding on a space splits the 
sentence into an array with one word in each element.  We sort the words but look 
out because sort is case-sensitive and will sort the capital letter first, then the rest 
alphabetically.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

64 Question
D) $s->setClass("SoapFunctions");
None of the other options exist or are valid; the missing line needs the setClass() call.  
http://www.php.net/manual/en/soapserver.setclass.php

65 Question
B) __sleep()
D) __call()
G) __set()
Check out the page on magic methods to see a full list: 
http://www.php.net/manual/en/language.oop5.magic.php

66 Question
X)ucwords
This method will make the first letter of every word into an upper case letter, 
regardless of its previous case.

67 Question
A) mysql_real_escape_string()
D) using PDO and prepared statements
One of the answers here isn't a real PHP function (option B, 
mysql_true_escape_string) and the others aren't effective against SQL attacks 
(although they're great in other security-related uses)
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

68 Question
C) Mike
Why is the answer C, not D (or any of the others).  Put simply: late static binding 
http://php.net/manual/en/language.oop5.late-static-bindings.php
What happens is that we instantiate an N (confusingly stored in $m, and then call m() 
on it which, after passing the typehint successfully, calls the identify() method in the N 
class.  This is inherited from M, but PHP will use M where we put "self" instead of 
using N.  Late static binding means we could use "static" instead of "self" and get 
"November" as the output.
ZCE-style question set.  Prepared by Lorna Mitchell ©Lornajane Ltd v1.1

69 Question
E) pass me that $a
This question shows a NOWDOC rather than a HEREDOC, so the variables won't be 
interpreted 
http://www.php.net/manual/en/language.types.string.php#language.types.string.synta
x.nowdoc

70 Question
C) using dom_import_simplexml()
If you didn't remember the name of the function, perhaps you can eliminate some of 
the other options.  Options B, D and E are nonsense and don't exist in PHP (although 
DOMDocument has a saveXML() method).  Option A looks plausible but you don't 
create DOMElement from XML – you create a DOMDocument.  So go for option C 
which is exactly what is needed: 
http://www.php.net/manual/en/function.dom-import-simplexml.php